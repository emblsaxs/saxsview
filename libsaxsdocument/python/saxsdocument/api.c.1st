
#include <Python.h>

#include "saxsdocument.h"

/**
 * This module implements three types and two module
 * functions:
 *  - type: saxsdocument.api.document
 *    wrapper for saxs_dcoument
 *  - type: saxsdocument.api.curve
 *    wrapper for saxs_curve
 *  - type: saxsdocument.api.data
 *    wrapper for saxs_data
 *
 *  - procedure: read
 *    reads a file, returns a 'filled in' document object
 *  - procedure: create
 *    returns an empty document object
 */

typedef struct {
  PyObject_HEAD

  struct saxs_data *data;

} PySaxsDataObject;

static PyObject *
PySaxsDataObject_get_x(PyObject *self, void *closure) {
  PySaxsDataObject *obj = (PySaxsDataObject*)self;
  return PyFloat_FromDouble(saxs_data_x(obj->data));
}

static PyObject *
PySaxsDataObject_get_y(PyObject *self, void *closure) {
  PySaxsDataObject *obj = (PySaxsDataObject*)self;
  return PyFloat_FromDouble(saxs_data_y(obj->data));
}

static PyObject *
PySaxsDataObject_get_yerr(PyObject *self, void *closure) {
  PySaxsDataObject *obj = (PySaxsDataObject*)self;
  return PyFloat_FromDouble(saxs_data_y_err(obj->data));
}

static PyGetSetDef PySaxsDataObject_getset[] = {
    {"x", PySaxsDataObject_get_x, NULL, "", NULL},
    {"y", PySaxsDataObject_get_y, NULL, "", NULL},
    {"yerr", PySaxsDataObject_get_yerr, NULL, "", NULL},
    {NULL}  /* Sentinel */
};

static PyTypeObject PySaxsDataObject_type = {
  PyVarObject_HEAD_INIT(NULL, 0)
  .tp_name = "saxsdocument.api.data",
  .tp_doc = "Curve Object",
  .tp_basicsize = sizeof(PySaxsDataObject),
  .tp_itemsize = 0,
  .tp_flags = Py_TPFLAGS_DEFAULT,
  .tp_getset = PySaxsDataObject_getset,
};




typedef struct {
  PyObject_HEAD

  struct saxs_curve *curve;

} PySaxsCurveObject;

static PyObject*
PySaxsCurveObject_data(PyObject *self, PyObject *args) {
  PyObject *data_list = PyList_New(0);

  PySaxsCurveObject *obj = (PySaxsCurveObject*)self;
  saxs_data *data = saxs_curve_data(obj->curve);
  while (data) {
    PySaxsDataObject *d = (PySaxsDataObject*)PyType_GenericNew(&PySaxsDataObject_type, NULL, NULL);
    d->data = data;
    PyList_Append(data_list, (PyObject*)d);
    Py_DECREF(d);

    data = saxs_data_next(data);
  }

  return data_list;
}

static PyMethodDef PySaxsCurveObject_methods[] = {
    { "data", PySaxsCurveObject_data, METH_NOARGS,
      "Returns a list of data objects" },

    {NULL}  /* Sentinel */
};

static PyTypeObject PySaxsCurveObject_type = {
  PyVarObject_HEAD_INIT(NULL, 0)
  .tp_name = "saxsdocument.api.curve",
  .tp_doc = "Curve Object",
  .tp_basicsize = sizeof(PySaxsCurveObject),
  .tp_itemsize = 0,
  .tp_flags = Py_TPFLAGS_DEFAULT,
  .tp_methods = PySaxsCurveObject_methods,
};



typedef struct {
  PyObject_HEAD

  struct saxs_document *doc;

} PySaxsDocumentObject;

static PyObject *
PySaxsDocumentObject_new(PyTypeObject *type, PyObject *args, PyObject *kwds) {
  PySaxsDocumentObject *obj;
  obj = (PySaxsDocumentObject *)type->tp_alloc(type, 0);
  obj->doc = saxs_document_create();

  return (PyObject*)obj;
}

static int
PySaxsDocumentObject_init(PyObject *self, PyObject *args, PyObject *kwargs) {
  static char *kwlist[] = {};

  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "", kwlist))
    return -1;

  return 0;
}

static void
PySaxsDocumentObject_dealloc(PyObject *self) {
  PySaxsDocumentObject *obj = (PySaxsDocumentObject*)self;
  saxs_document_free(obj->doc);

  Py_TYPE(self)->tp_free(self);
}

static PyObject*
PySaxsDocumentObject_curves(PyObject *self, PyObject *args) {
  PyObject *curves = PyList_New(0);

  PySaxsDocumentObject *obj = (PySaxsDocumentObject*)self;
  saxs_curve *curve = saxs_document_curve(obj->doc);
  while (curve) {
    PySaxsCurveObject *c = (PySaxsCurveObject*)PyType_GenericNew(&PySaxsCurveObject_type, NULL, NULL);
    c->curve = curve;
    PyList_Append(curves, (PyObject*)c);
    Py_DECREF(c);

    curve = saxs_curve_next(curve);
  }

  return curves;
}

static PyObject*
PySaxsDocumentObject_properties(PyObject *self, PyObject *args) {
  PyObject *properties = PyDict_New();

  PySaxsDocumentObject *obj = (PySaxsDocumentObject*)self;
  saxs_property *property = saxs_document_property_first(obj->doc);
  while (property) {
    PyObject *key = PyUnicode_FromFormat("%s", saxs_property_name(property));
    PyObject *val = PyUnicode_FromFormat("%s", saxs_property_value(property));
    PyDict_SetItem(properties, key, val);
    Py_DECREF(val);
    Py_DECREF(key);

    property = saxs_property_next(property);
  }

  return properties;
}

static PyMethodDef PySaxsDocumentObject_methods[] = {
    { "curves", PySaxsDocumentObject_curves, METH_NOARGS,
      "Returns a list of curve objects" },
    { "properties", PySaxsDocumentObject_properties, METH_NOARGS,
      "Returns a dictionary of properties found in the data file" },

    {NULL}  /* Sentinel */
};

static PyTypeObject PySaxsDocumentObject_type = {
  PyVarObject_HEAD_INIT(NULL, 0)
  .tp_name = "saxsdocument.api.document",
  .tp_doc = "Document Object",
  .tp_basicsize = sizeof(PySaxsDocumentObject),
  .tp_itemsize = 0,
  .tp_flags = Py_TPFLAGS_DEFAULT,
  .tp_new = PySaxsDocumentObject_new,
  .tp_init = PySaxsDocumentObject_init,
  .tp_dealloc = PySaxsDocumentObject_dealloc,
  .tp_methods = PySaxsDocumentObject_methods,
};



static PyObject*
saxsdocument_api_create(PyObject *self, PyObject *args) {
  if (!PyArg_ParseTuple(args, ""))
    return NULL;

  return PySaxsDocumentObject_new(&PySaxsDocumentObject_type, NULL, NULL);
}

static PyObject*
saxsdocument_api_read(PyObject *self, PyObject *args) {
  char *filename = NULL, *format = NULL;

  if (!PyArg_ParseTuple(args, "s|s", &filename, &format))
    return NULL;

  PySaxsDocumentObject *obj = (PySaxsDocumentObject*) PySaxsDocumentObject_new(&PySaxsDocumentObject_type, NULL, NULL);

  int result = saxs_document_read(obj->doc, filename, format);
  if (result) {
    errno = result;
    return PyErr_SetFromErrnoWithFilename(PyExc_IOError, filename);
  }

  return (PyObject*)obj;
}

static PyMethodDef saxsdocument_api_module_methods[] = {
  { "create", saxsdocument_api_create, METH_NOARGS, "" },
  { "read", saxsdocument_api_read, METH_VARARGS, "" },
  { NULL, NULL, 0, NULL }
};


#if PY_MAJOR_VERSION == 2
PyMODINIT_FUNC initapi(void) {
  if (PyType_Ready(&PySaxsDataObject_type) < 0)
    return;

  if (PyType_Ready(&PySaxsCurveObject_type) < 0)
    return;

  if (PyType_Ready(&PySaxsDocumentObject_type) < 0)
    return;

  Py_InitModule3("saxsdocument.api", 
                 saxsdocument_api_module_methods,
                 "Python interface to libsaxsdocument.");
}

#elif PY_MAJOR_VERSION == 3
static PyModuleDef saxsdocument_api_module = {
  PyModuleDef_HEAD_INIT,
  .m_name = "saxsdocument.api",
  .m_doc = "Python interface to libsaxsdocument.",
  .m_size = -1,
  .m_methods = saxsdocument_api_module_methods,
};

PyMODINIT_FUNC PyInit_api(void) {
  if (PyType_Ready(&PySaxsDataObject_type) < 0)
    return;

  if (PyType_Ready(&PySaxsCurveObject_type) < 0)
    return;

  if (PyType_Ready(&PySaxsDocumentObject_type) < 0)
    return NULL;

  return PyModule_Create(&saxsdocument_module_def);
}
#endif

